<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.agrs</groupId>
    <artifactId>jcuda</artifactId>
    <version>0.1</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Set needed version of JCuda here -->
        <jcuda.version>0.7.5</jcuda.version>
        <jnetpcap.version>1.4.r1300</jnetpcap.version>
        <project.mainClass>org.agrs.jcuda.Analyze</project.mainClass>
    </properties>
    <dependencies>
        <!--JCuda Java libs-->
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcublas</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcuda</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcufft</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcurand</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcusparse</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcusolver</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <!--JNETPCAP-->
        <dependency>
            <groupId>jnetpcap</groupId>
            <artifactId>jnetpcap</artifactId>
            <version>${jnetpcap.version}</version>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>jcuda.local</id>
            <name>JCuda</name>
            <url>file:${project.basedir}/repo</url>
        </repository>
        <repository>
            <id>jnetpcap.local</id>
            <name>jnetpcap</name>
            <url>file:${project.basedir}/repo</url>
        </repository>
    </repositories>
    <build>
        <defaultGoal>compile</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.9</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- compile ptx files -->
            <plugin>
              <artifactId>exec-maven-plugin</artifactId>
              <groupId>org.codehaus.mojo</groupId>
              <version>1.4.0</version>
              <executions>
                <execution>
                  <id>Compile PTX</id>
                  <phase>compile</phase>
                  <goals>
                    <goal>exec</goal>
                  </goals>
                  <configuration>
                    <environmentVariables>
                      <KERNEL_DIR>${basedir}/src/kernels/</KERNEL_DIR>
                    </environmentVariables>
                    <executable>${basedir}/scripts/make_ptx.sh</executable>
                    <workingDirectory>${project.build.directory}/kernels/</workingDirectory>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <!--usage of exec plugin-->
            <!--mvn exec:exec -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-Djava.library.path=${project.build.directory}/lib</argument>
                        <argument>-classpath</argument>
                        <!-- automatically creates the classpath using all project dependencies,
                                   also adding the project build directory -->
                        <classpath/>
                        <!--Replace with your class reference if any -->
                        <mainClass>${project.mainClass}</mainClass>
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <!--Set of auto detected profiles for different OS family/architecture-->
    <profiles>
        <!--New profile for JCuda version 0.6.0RC for Win-x86_64 and higher

            will work automatically, thanks to auto activation
        -->
        <profile>
            <id>windows-x86_64</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <dllJ.version>windows-x86_64</dllJ.version>
            </properties>
            <dependencies>
                <!--JCuda native dll libs-->
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCublas2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCublas</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCudaDriver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCudaRuntime</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCufft</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCurand</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCusparse</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCusolver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
            </dependencies>
        </profile>
        <!--New profile for JCuda version 0.6.0RC for Win-x86 and higher

       will work automatically, thanks to auto activation
   -->
        <profile>
            <id>windows-x86</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>x86</arch>
                </os>
            </activation>
            <properties>
                <dllJ.version>windows-x86</dllJ.version>
            </properties>
            <dependencies>
                <!--JCuda native dll libs-->
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCublas2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCublas</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCudaDriver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCudaRuntime</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCufft</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCurand</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCusparse</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
            </dependencies>
        </profile>
        <!--New profile for JCuda version 0.6.0 for Linux-x86_64 and higher

     will work automatically, thanks to auto activation
 -->
        <profile>
            <id>unix-x86_64</id>
            <activation>
                <os>
                    <family>unix</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <libJ.version>linux-x86_64</libJ.version>
            </properties>
            <!--JCuda native so libs-->
            <dependencies>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaDriver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaRuntime</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCufft</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCurand</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusparse</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusolver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <!--native jnetpcap-->
                <dependency>
                    <groupId>jnetpcap</groupId>
                    <artifactId>libjnetpcap</artifactId>
                    <version>${jnetpcap.version}</version>
                    <type>so</type>
                </dependency>
            </dependencies>
        </profile>

        <!--
        New profile for JCuda version 0.7.0a for PPC 64

       will work automatically, thanks to auto activation
        -->
        <profile>
            <id>ppc64</id>
            <activation>
                <os>
                    <family>unix</family>
                    <arch>ppc64</arch>
                </os>
            </activation>
            <properties>
                <libJ.version>linux-ppc_64</libJ.version>
            </properties>
            <!--JCuda native so libs-->
            <dependencies>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaDriver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaRuntime</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCufft</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCurand</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusparse</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusolver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
            </dependencies>
        </profile>

        <!--
        New profile for JCuda version 0.7.0a for PPC 64 LE

       will work automatically, thanks to auto activation
        -->
        <profile>
            <id>ppc64le</id>
            <activation>
                <os>
                    <family>unix</family>
                    <arch>ppc64le</arch>
                </os>
            </activation>
            <properties>
                <libJ.version>linux-ppc_64</libJ.version>
            </properties>
            <!--JCuda native so libs-->
            <dependencies>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaDriver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaRuntime</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCufft</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCurand</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusparse</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusolver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
            </dependencies>
        </profile>

        <!--New profile for JCuda version 0.6.0 for Mac x86_64

       will work automatically, thanks to auto activation
   -->
        <profile>
            <id>apple-x86_64</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>x86_64</arch>
                </os>
            </activation>
            <properties>
                <dylibJ.version>apple-x86_64</dylibJ.version>
            </properties>
            <!--JCuda native dylib libs-->
            <dependencies>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dylibJ.version}</classifier>
                    <type>dylib</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dylibJ.version}</classifier>
                    <type>dylib</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaDriver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dylibJ.version}</classifier>
                    <type>dylib</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaRuntime</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dylibJ.version}</classifier>
                    <type>dylib</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCufft</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dylibJ.version}</classifier>
                    <type>dylib</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCurand</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dylibJ.version}</classifier>
                    <type>dylib</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusparse</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dylibJ.version}</classifier>
                    <type>dylib</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusparse2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dylibJ.version}</classifier>
                    <type>dylib</type>
                </dependency>
            </dependencies>
        </profile>


        <!--Out of date profile for JCuda versions 0.5.0, 0.5.5
        Won't set up automatically, since newest version is always a more important
        Thanks to Maven bug - http://jira.codehaus.org/browse/MNG-4565

        UPD. It was solved by me, but we need to use Maven 3.2.2 that will come soon, to avoid that problem
        -->
        <profile>
            <id>windows-x86_64_old</id>
            <properties>
                <dllJ.version>windows-x86_64</dllJ.version>
            </properties>
            <dependencies>
                <!--JCuda native dll libs-->
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCublas2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCublas</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCudaDriver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCudaRuntime</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCufft</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCurand</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCusparse</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCusparse2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
            </dependencies>
        </profile>
        <!--Out of date profile for JCuda versions 0.5.0, 0.5.5
        Won't set up automatically, since newest version is always a more important
        Thanks to Maven bug - http://jira.codehaus.org/browse/MNG-4565

        UPD. It was solved by me, but we need to use Maven 3.2.2 that will come soon, to avoid that problem
        -->
        <profile>
            <id>windows-x86_old</id>
            <properties>
                <dllJ.version>windows-x86</dllJ.version>
            </properties>
            <dependencies>
                <!--JCuda native dll libs-->
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCublas2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCublas</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCudaDriver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCudaRuntime</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCufft</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCurand</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCusparse</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>JCusparse2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${dllJ.version}</classifier>
                    <type>dll</type>
                </dependency>
            </dependencies>
        </profile>
        <!--Out of date profile for JCuda versions 0.5.0, 0.5.5
        Won't set up automatically, since newest version is always a more important
        Thanks to Maven bug - http://jira.codehaus.org/browse/MNG-4565

        UPD. It was solved by me, but we need to use Maven 3.2.2 that will come soon, to avoid that problem
        -->
        <profile>
            <id>unix-x86_64_old</id>
            <properties>
                <libJ.version>linux-x86_64</libJ.version>
            </properties>
            <!--JCuda native so libs-->
            <dependencies>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaDriver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaRuntime</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCufft</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCurand</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusparse</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusparse2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
            </dependencies>
        </profile>
        <!--Out of date profile for JCuda versions 0.5.0, 0.5.5 for Linux-x86

        Still work automatically, until newest versions of this arch will be available
        -->
        <profile>
            <id>unix-x86_old</id>
            <activation>
                <os>
                    <family>unix</family>
                    <arch>i386</arch>
                </os>
            </activation>
            <properties>
                <libJ.version>linux-x86</libJ.version>
            </properties>
            <!--JCuda native so libs-->
            <dependencies>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCublas</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaDriver</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCudaRuntime</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCufft</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCurand</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusparse</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
                <dependency>
                    <groupId>jcuda</groupId>
                    <artifactId>libJCusparse2</artifactId>
                    <version>${jcuda.version}</version>
                    <classifier>${libJ.version}</classifier>
                    <type>so</type>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
